name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  actions: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      # Release Please bot: creates release PRs and tags, manages changelog and versioning
      - uses: googleapis/release-please-action@v4.2.0
        id: release
        with:
          release-type: node
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    environment: release
    steps:
      # Check out the code at the release commit
      - uses: actions/checkout@v4

      # Set up Node.js with npm cache for faster installs
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      # Install dependencies from package-lock.json for reproducible builds
      - name: Install dependencies
        run: npm ci

      # Generate README and any other templated files
      # This ensures the published package always has up-to-date generated content
      - name: Generate README and templates
        run: npm run generate

      # Validate that generated files are current and committed
      # Fails if README or other generated files are out of sync, preventing accidental stale publishes
      - name: Validate generated files
        run: npm run validate

      # Run all tests (unit and integration) to ensure package correctness before publishing
      - name: Run tests
        run: npm test

      # Publish to npm registry only if all previous steps succeed
      # This guarantees only validated, tested, and up-to-date packages are published
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
